openapi: 3.0.0
info:
  title: ForumMed API
  description: API para a plataforma ForumMed
  version: 1.0.0
servers:
  - url: /api
    description: Servidor de produção
  - url: http://localhost:3000/api
    description: Servidor de desenvolvimento

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  
  schemas:
    Error:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          example: Erro ao processar requisição
        errors:
          type: array
          items:
            type: object
            properties:
              param:
                type: string
              msg:
                type: string
              location:
                type: string
    
    Question:
      type: object
      properties:
        id:
          type: string
          example: "5f8d0e1b9c9d440000a1b1c1"
        statement:
          type: string
          example: "Qual é a capital do Brasil?"
        alternatives:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              text:
                type: string
              isCorrect:
                type: boolean
        explanation:
          type: string
        difficulty:
          type: string
          enum: [EASY, MEDIUM, HARD, VERY_HARD]
        filterIds:
          type: array
          items:
            type: string
        subFilterIds:
          type: array
          items:
            type: string
        tags:
          type: array
          items:
            type: string
        status:
          type: string
          enum: [DRAFT, PUBLISHED, ARCHIVED, PENDING_REVIEW, REJECTED]
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    
    SimulatedExam:
      type: object
      properties:
        id:
          type: string
          example: "5f8d0e1b9c9d440000a1b1c1"
        title:
          type: string
          example: "Simulado de Cardiologia"
        description:
          type: string
        duration:
          type: integer
          example: 120
        questionCount:
          type: integer
          example: 30
        categories:
          type: array
          items:
            type: string
        difficulty:
          type: string
          enum: [EASY, MEDIUM, HARD, VERY_HARD]
        isPublic:
          type: boolean
        tags:
          type: array
          items:
            type: string
        status:
          type: string
          enum: [DRAFT, PUBLISHED, ARCHIVED]
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        publishedAt:
          type: string
          format: date-time
        questions:
          type: array
          items:
            $ref: '#/components/schemas/Question'
    
    SearchResult:
      type: object
      properties:
        items:
          type: array
          items:
            type: object
        total:
          type: integer
        page:
          type: integer
        limit:
          type: integer
        totalPages:
          type: integer

security:
  - bearerAuth: []

paths:
  /questions:
    get:
      summary: Lista questões com filtros e paginação
      tags:
        - Questões
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            default: 1
          description: Página atual
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
          description: Itens por página
        - in: query
          name: status
          schema:
            type: string
            enum: [DRAFT, PUBLISHED, ARCHIVED, PENDING_REVIEW, REJECTED]
          description: Status das questões
        - in: query
          name: difficulty
          schema:
            type: string
            enum: [EASY, MEDIUM, HARD, VERY_HARD]
          description: Dificuldade das questões
        - in: query
          name: filterId
          schema:
            type: string
          description: ID do filtro
        - in: query
          name: subFilterId
          schema:
            type: string
          description: ID do subfiltro
        - in: query
          name: search
          schema:
            type: string
          description: Termo de busca
        - in: query
          name: sortBy
          schema:
            type: string
            enum: [createdAt, updatedAt, difficulty]
            default: createdAt
          description: Campo para ordenação
        - in: query
          name: sortOrder
          schema:
            type: string
            enum: [asc, desc]
            default: desc
          description: Ordem de classificação
      responses:
        '200':
          description: Lista de questões
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/Question'
                      pagination:
                        type: object
                        properties:
                          total:
                            type: integer
                          page:
                            type: integer
                          limit:
                            type: integer
                          totalPages:
                            type: integer
        '400':
          description: Erro de validação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Erro interno do servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    
    post:
      summary: Cria uma nova questão
      tags:
        - Questões
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - statement
                - alternatives
              properties:
                statement:
                  type: string
                  example: "Qual é a capital do Brasil?"
                alternatives:
                  type: array
                  items:
                    type: object
                    required:
                      - text
                      - isCorrect
                    properties:
                      text:
                        type: string
                        example: "Brasília"
                      isCorrect:
                        type: boolean
                        example: true
                explanation:
                  type: string
                  example: "Brasília é a capital federal do Brasil desde 21 de abril de 1960."
                difficulty:
                  type: string
                  enum: [EASY, MEDIUM, HARD, VERY_HARD]
                  default: MEDIUM
                filterIds:
                  type: array
                  items:
                    type: string
                subFilterIds:
                  type: array
                  items:
                    type: string
                tags:
                  type: array
                  items:
                    type: string
                status:
                  type: string
                  enum: [DRAFT, PUBLISHED, PENDING_REVIEW]
                  default: DRAFT
      responses:
        '201':
          description: Questão criada com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Questão criada com sucesso"
                  data:
                    $ref: '#/components/schemas/Question'
        '400':
          description: Erro de validação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Não autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Acesso negado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Erro interno do servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /questions/{questionId}:
    get:
      summary: Obtém uma questão pelo ID
      tags:
        - Questões
      parameters:
        - in: path
          name: questionId
          required: true
          schema:
            type: string
          description: ID da questão
      responses:
        '200':
          description: Questão encontrada
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/Question'
        '404':
          description: Questão não encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Erro interno do servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    
    put:
      summary: Atualiza uma questão existente
      tags:
        - Questões
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: questionId
          required: true
          schema:
            type: string
          description: ID da questão
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                statement:
                  type: string
                alternatives:
                  type: array
                  items:
                    type: object
                    properties:
                      text:
                        type: string
                      isCorrect:
                        type: boolean
                explanation:
                  type: string
                difficulty:
                  type: string
                  enum: [EASY, MEDIUM, HARD, VERY_HARD]
                filterIds:
                  type: array
                  items:
                    type: string
                subFilterIds:
                  type: array
                  items:
                    type: string
                tags:
                  type: array
                  items:
                    type: string
                status:
                  type: string
                  enum: [DRAFT, PUBLISHED, ARCHIVED, PENDING_REVIEW, REJECTED]
      responses:
        '200':
          description: Questão atualizada com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Questão atualizada com sucesso"
                  data:
                    $ref: '#/components/schemas/Question'
        '400':
          description: Erro de validação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Não autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Acesso negado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Questão não encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Erro interno do servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    
    delete:
      summary: Exclui uma questão
      tags:
        - Questões
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: questionId
          required: true
          schema:
            type: string
          description: ID da questão
      responses:
        '200':
          description: Questão excluída com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Questão excluída com sucesso"
        '401':
          description: Não autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Acesso negado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Questão não encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Erro interno do servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /questions/import:
    post:
      summary: Importa questões em lote
      tags:
        - Questões
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - questions
              properties:
                questions:
                  type: array
                  items:
                    type: object
                    required:
                      - statement
                      - alternatives
                    properties:
                      statement:
                        type: string
                      alternatives:
                        type: array
                        items:
                          type: object
                          properties:
                            text:
                              type: string
                            isCorrect:
                              type: boolean
                      explanation:
                        type: string
                      difficulty:
                        type: string
                        enum: [EASY, MEDIUM, HARD, VERY_HARD]
                      filterIds:
                        type: array
                        items:
                          type: string
                      subFilterIds:
                        type: array
                        items:
                          type: string
                      tags:
                        type: array
                        items:
                          type: string
      responses:
        '200':
          description: Questões importadas com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Questões importadas com sucesso"
                  data:
                    type: object
                    properties:
                      total:
                        type: integer
                      successful:
                        type: integer
                      failed:
                        type: integer
                      errors:
                        type: array
                        items:
                          type: object
                          properties:
                            index:
                              type: integer
                            message:
                              type: string
        '400':
          description: Erro de validação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Não autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Acesso negado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Erro interno do servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /questions/export:
    get:
      summary: Exporta questões
      tags:
        - Questões
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: format
          schema:
            type: string
            enum: [json, csv]
            default: json
          description: Formato de exportação
        - in: query
          name: filters
          schema:
            type: string
          description: Filtros em formato JSON
      responses:
        '200':
          description: Questões exportadas com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Question'
            text/csv:
              schema:
                type: string
        '400':
          description: Erro de validação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Não autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Acesso negado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Erro interno do servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /questions/{questionId}/report:
    post:
      summary: Reporta um problema em uma questão
      tags:
        - Questões
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: questionId
          required: true
          schema:
            type: string
          description: ID da questão
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - reason
              properties:
                reason:
                  type: string
                  enum: [incorrect_answer, unclear_statement, multiple_correct_answers, no_correct_answer, outdated_content, offensive_content, other]
                description:
                  type: string
      responses:
        '200':
          description: Problema reportado com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Problema reportado com sucesso"
        '400':
          description: Erro de validação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Não autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Questão não encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Erro interno do servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /search:
    get:
      summary: Busca global em múltiplas entidades
      tags:
        - Busca
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: query
          required: true
          schema:
            type: string
          description: Termo de busca
        - in: query
          name: page
          schema:
            type: integer
            default: 1
          description: Página atual
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
          description: Itens por página
        - in: query
          name: types
          schema:
            type: string
          description: Tipos de entidades a serem buscadas (separados por vírgula)
      responses:
        '200':
          description: Resultados da busca
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      users:
                        $ref: '#/components/schemas/SearchResult'
                      decks:
                        $ref: '#/components/schemas/SearchResult'
                      articles:
                        $ref: '#/components/schemas/SearchResult'
                      questions:
                        $ref: '#/components/schemas/SearchResult'
        '400':
          description: Erro de validação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Não autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Erro interno do servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /search/users:
    get:
      summary: Busca usuários
      tags:
        - Busca
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: query
          required: true
          schema:
            type: string
          description: Termo de busca
        - in: query
          name: page
          schema:
            type: integer
            default: 1
          description: Página atual
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
          description: Itens por página
      responses:
        '200':
          description: Resultados da busca
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/SearchResult'
        '400':
          description: Erro de validação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Não autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Erro interno do servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /admin/dashboard:
    get:
      summary: Obtém estatísticas para o dashboard administrativo
      tags:
        - Admin
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Estatísticas do dashboard
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      users:
                        type: object
                      content:
                        type: object
                      payments:
                        type: object
                      activities:
                        type: array
                        items:
                          type: object
        '401':
          description: Não autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Acesso negado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Erro interno do servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /admin/users:
    get:
      summary: Gerencia usuários
      tags:
        - Admin
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            default: 1
          description: Página atual
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
          description: Itens por página
        - in: query
          name: search
          schema:
            type: string
          description: Termo de busca
        - in: query
          name: role
          schema:
            type: string
          description: Papel do usuário
        - in: query
          name: status
          schema:
            type: string
            enum: [active, inactive, all]
          description: Status do usuário
        - in: query
          name: sortBy
          schema:
            type: string
          description: Campo para ordenação
        - in: query
          name: sortOrder
          schema:
            type: string
            enum: [asc, desc]
          description: Ordem de classificação
      responses:
        '200':
          description: Lista de usuários
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      users:
                        type: array
                        items:
                          type: object
                      pagination:
                        type: object
        '401':
          description: Não autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Acesso negado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Erro interno do servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'